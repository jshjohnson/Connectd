/* Helper classes
----------------------------------*/

.push-top 		{ margin-top: $baseline; }
.push-bottom 	{ margin-bottom: $baseline; }

.zero-top 		{ margin-top: 0 !important; }
.zero-bottom 	{ margin-bottom: 0 !important; }

.weight-light      { font-weight:300 !important; }
.weight-normal     { font-weight:400 !important; }
.weight-semibold   { font-weight:600 !important; }

.list-unset 	{ list-style: none !important; margin-left: 0 !important; }
.list-numbers 	{ list-style: decimal !important; }
.list-bullets 	{ list-style: disc !important; }

.block {display: block;}

.float-right { float: right; }
.float-left { float:left; }

.text-center {
	text-align: center;
}

.clear {
	clear: both;
}

.cover {
	@include background-size(cover);
}

/* Theme Classes */

.brand-text {
	color: $color-brand-dark; }
	
.brand-bg {
	background-color: $color-brand-dark; } 	

/* Micro Clearfix - http://goo.gl/5Fvrh */

.cf {
	zoom : 1;
	
	&:before, &:after { content: ""; display: table; }
	&:after { clear : both; }
}	

/* Specific text styles
----------------------------------*/
.required { border: 1px solid $color-brand-highlight !important;}
.intro { font-size: 1.25em; }
.headline { border-bottom: 1px solid $color-keyline; padding-bottom: .45em; }


/* Style trumps (error states etc.)
----------------------------------*/

.is-hidden { display: none; visibility: hidden; }
.is-vhidden {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px; }

.warning{color:#900;}
.info{color:#990;}
.alert{	color:#009;}
.help{color:#7f7e7e}

.success {
	background-color: $color-brand-mid;
	color: white;
	padding: .5em 1em;
	font-size: .9em;
	&:after {
		content: "";
		width: 0;
		height: 0;
		border-left: .75em solid transparent;
		border-right: .75em solid transparent;
		border-top: 0.75em solid $color-brand-mid;
		position: absolute;
		left: 3.5em;
		top: 4.7em;
		@include respond-max($bp1-5) {
			left: 2.8em;
			top: 3.7em;	
		}
	}
}

.error {
	background-color: $color-brand-highlight;
	color: white;
	padding: .5em 1em;
	font-size: .9em;
	&:after {
		content: "";
		width: 0;
		height: 0;
		border-left: .75em solid transparent;
		border-right: .75em solid transparent;
		border-top: 0.75em solid $color-brand-highlight;
		position: absolute;
		left: 3.5em;
		top: 4.7em;
		@include respond-max($bp1-5) {
			left: 2.8em;
			top: 3.7em;	
		}
	}
}

.error--long {
	&:after {
		top: 6.2em;
		@include respond-max($bp4) {
			border-top: transparent;
		}
		@include respond-max($bp1) {
			border-top: 0.75em solid $color-brand-highlight;
			left: 2.8em;
			top: 6.7em;	
		}
	}
}

/* Debuggin'
----------------------------------*/

// Shows current breakpoint indicator for development purposes. 

@mixin debug-message{
		display:inline-block;
		color:#FFF;
		position: fixed;
		z-index: 50;
		top:1em;
		right:1em;
		background-color:rgba(255,255,255,0.1);
		padding:.35em;
		font-family: $font-sans;
		text-transform:uppercase;
		font-size:.8em;
	}

//New breakpoints will need a new @include adding here.

body.debug{
	&:before{@include debug-message; content: "Breakpoint 0"}

	@include respond-min($bp1) {
		&:before{@include debug-message; content: "Breakpoint 1"}
	}
	@include respond-min($bp2) {
		&:before{@include debug-message; content: "Breakpoint 2"}
	}	
	@include respond-min($bp3) {
		&:before{@include debug-message; content: "Breakpoint 3"}
	}	
	@include respond-min($bp4) {
		&:before{@include debug-message; content: "Breakpoint 4"}
	}
}