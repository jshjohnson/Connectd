/* Helper classes
----------------------------------*/

.push-top 		{ margin-top: $baseline; }
.push-bottom 	{ margin-bottom: $baseline; }

.zero-top 		{ margin-top: 0 !important; }
.zero-bottom 	{ margin-bottom: 0 !important; }

.weight-light      { font-weight:300 !important; }
.weight-normal     { font-weight:400 !important; }
.weight-semibold   { font-weight:600 !important; }

.list-inline 	{ li { display: inline; padding-left: 1em; &:first-child{ padding-left: 0;}} }
.list-unset 	{ list-style: none !important; margin-left: 0 !important; }
.list-numbers 	{ list-style: decimal !important; }
.list-bullets 	{ list-style: disc !important; }

.block {display: block;}

.float-right { float: right; clear: right}
.float-left { float:left; clear: left;}

.text-center {
	text-align: center;
}

.clear {
	clear: both;
}

.cover {
	@include background-size(cover);
}

/* Theme Classes */

.brand-text {
	color: $color-brand-dark; }
	
.brand-bg {
	background-color: $color-brand-dark; } 	

/* Micro Clearfix - http://goo.gl/5Fvrh */

.cf {
	zoom : 1;
	
	&:before, &:after { content: ""; display: table; }
	&:after { clear : both; }
}	

/* Specific text styles
----------------------------------*/
.required { border: 1px solid $color-brand-highlight !important;}
.intro { font-size: 1.25em; }
.headline { border-bottom: 1px solid $color-keyline; padding-bottom: .45em; }


/* Style trumps (error states etc.)
----------------------------------*/

.alert {
	width: 100%;
	position: fixed;
	z-index: 999;
	display: none;
	top: 0;
	text-align: center;
	.alert-success__title {
		margin: 0;
		color: white;
		font-size: .75em;
		padding: .4em;
		line-height: 2;
	}
}

.alert-success {
	background-color: #fc4349;
}

.is-hidden { display: none; visibility: hidden; }
.is-vhidden {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px; }

.warning, %warning {color:#900;}
.info, %info {color:#7f7e7e;}
.alert, %alert {	color:#009;}
.help, %help {color:#7f7e7e}

.message {
	color: white;
	padding: .5em 1em;
	font-size: .9em;
	margin-bottom: 1.5em;
	position: relative;
	clear: both;
	&:after {
		content: "";
		width: 0;
		height: 0;
		border-left: .75em solid transparent;
		border-right: .75em solid transparent;
		position: absolute;
		left: 1.5em;
		top: 100%;
	}
	a {
		color: white;
		font-weight: bolder;
	}
}

.message-flipped {
	color: white;
	padding: .5em 1em;
	font-size: .9em;
	position: relative;
	&:before {
		content: "";
		width: 0;
		height: 0;
		border-left: .75em solid transparent;
		border-right: .75em solid transparent;
		position: absolute;
		left: 1.5em;
		top: -28%;
	}
	a {
		color: white;
		font-weight: bolder;
	}
}

.message--success {
	background-color: $color-brand-mid;
	&:after {
		border-top: 0.75em solid $color-brand-mid;
	}
}

.message--error {
	background-color: $color-brand-highlight;
	&:after {
		border-top: 0.75em solid $color-brand-highlight;
	}
}

.message--hint {
	background-color: $color-background-mid;
	color: #8B8888;
	margin: .5em 0;
	&:after {
		border-top: 0.75em solid $color-background-mid;
	}
	&:first-child {
		margin: 0 0 .5em;
	}
}

.message-flipped--notification {
	background-color: orange;
	&:before {
		border-bottom: 0.75em solid orange;
	}
}

input:disabled {
	background-color: #ccc !important;
	@include box-shadow(0 0.1em 0 #948F8F !important);
	&:hover {
		@include box-shadow(0 0.1em 0 #948F8F !important);
		top: 1.4em;
	}
}


/* Debuggin'
----------------------------------*/

// Shows current breakpoint indicator for development purposes. 

@mixin debug-message{
		display:inline-block;
		color:#FFF;
		position: fixed;
		z-index: 50;
		top:1em;
		right:1em;
		background-color:rgba(255,255,255,0.1);
		padding:.35em;
		font-family: $font-sans;
		text-transform:uppercase;
		font-size:.8em;
	}

//New breakpoints will need a new @include adding here.

body.debug{
	&:before{@include debug-message; content: "Breakpoint 0"}

	@include respond-min($bp1) {
		&:before{@include debug-message; content: "Breakpoint 1"}
	}
	@include respond-min($bp2) {
		&:before{@include debug-message; content: "Breakpoint 2"}
	}	
	@include respond-min($bp3) {
		&:before{@include debug-message; content: "Breakpoint 3"}
	}	
	@include respond-min($bp4) {
		&:before{@include debug-message; content: "Breakpoint 4"}
	}
}