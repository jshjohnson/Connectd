// ------------------------------------------------------------------------------
// Project-Specific Mixins
// ------------------------------------------------------------------------------

// begin here

// ------------------------------------------------------------------------------
// Framework Mixins
// ------------------------------------------------------------------------------

// Nav Objects
// ----------------------------------

// make list items inline
@mixin nav-inline {
	li,
	a {
		display: inline-block;
		*display:inline;
        zoom:1; }	
}

// extends nav-inline with dividers
@mixin nav-divided {
	li {
		border-left: 1px solid $color-keyline;
		
		&:first-child {
			border-left: none;
			
			a {
				padding-left: 0; }
		}
		
		&:last-child {
			a {
				padding-right: 0; }
		}
	}
}

// stack nav items together
@mixin nav-stacked {
	li {
		display: list-item;
		margin-bottom: 0; }
	
	a {
		display: block;
		padding: .5em 0; }
}

// Icon Font
// ----------------------------------
@mixin icon-font($url: $icon-font-url, $family: $icon-font-family) {
	@font-face {
		font-family: $family;
		src: url($url + ".eot");
		src: url($url + ".eot?#iefix") format('embedded-opentype'), url($url + ".woff") format('woff'), url($url + ".ttf") format('truetype'), url($url + ".svg#iconfont") format('svg');
		font-weight: normal;
		font-style: normal;
	}
	
	.icon:before,
	[class^="icon--"]:before,
	[class*=" icon--"]:before {
	    font-family: $icon-font-family;
	    font-weight: normal;
	    font-style: normal;
		speak: none;
	    display: inline-block;
	    text-decoration: inherit;
	    margin-right: .2em;
	    position: relative;
		line-height: 1em;
	    top: 1px; }
	    
	.icon--large:before {
		vertical-align: middle;
		font-size: 1.35em;
		line-height: 1.2em;
		padding-right: .2em; } 
	
	.icon--pad:before {
		padding-right: .3em; }		
	
}

// Typography
// ----------------------------------
@mixin font-sans {
	font-family: $font-sans; }
	
@mixin font-serif {
	font-family: $font-serif; }

@mixin font-size ($size: 16) {
	$rem: ($size / 16);
	font-size: ($size * 1px);
	font-size: ($rem * 1rem); }

// Hovers
// ----------------------------------
@mixin hover ($col) {
	&:hover, &:active, &:focus {
		color: $col; }
}

@mixin hover-bg ($col) {
	&:hover, &:active, &:focus {
		background-color: $col; }
}

@mixin hover-reset ($col: $color-link-hover, $shadow: none) {
	&:hover,
	&:active,
	&:focus {
		color: $col;
		text-shadow: $shadow; }
}

// ------------------------------------------------------------------------------
// General Mixins
// ------------------------------------------------------------------------------

// Borders
// ----------------------------------
@mixin border ($size: 1px, $style: solid) {
	border: $size $style; }

@mixin border-set ($where: top, $size: 1px, $style: solid) {
	border-#{$where}: $size $style; }	

// Shadows
// ----------------------------------
@mixin drop-shadow {
	@include box-shadow; }

@mixin inset-shadow {
	@include box-shadow-inset; }
	
// Image Replacement
// ----------------------------------
@mixin hide-text {
	text-indent: -9999px;
	overflow: hidden; }

@mixin sprite {
	background-image: url('../img/sprite.svg'); 
	background-repeat: no-repeat; }

@mixin ir ($width: auto, $height: auto) {
	display: block;
	width: $width;
	height: 0;
	padding-top: $height;
	overflow: hidden;
	@include sprite; }
	
// Pseudo Content
// ----------------------------------	
@mixin pseudo {
	display: block;
	content: ""; }
	
@mixin pseudo-before ($absolute: no, $sprite: no) {
	@if $absolute != no {
		position: relative;
	}
	&:before {
		@include pseudo;
		@if $absolute != no {
			position: absolute;
		}
		@if $sprite != no {
			@include sprite;
		}
	}
}

@mixin pseudo-after ($absolute: no, $sprite: no) {
	@if $absolute != no {
		position: relative;
	}
	&:after {
		@include pseudo;
		@if $absolute != no {
			position: absolute;
		}
		@if $sprite != no {
			@include sprite;
		}
	}
}

// CSS3
// ----------------------------------
@mixin box-sizing ($type: border) {
	-moz-box-sizing: #{$type}-box;
	-webkit-box-sizing: #{$type}-box;
	box-sizing: #{$type}-box; }

@mixin border-radius($radius: .4em) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	border-radius: $radius;
	
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box; }
	
@mixin linear-gradient-y($start: #eee, $stop: #fff) {
	background: $start;
	background: -moz-linear-gradient(top, $start 0%,$stop 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(100%,$stop));
	background: -webkit-linear-gradient(top, $start 0%,$stop 100%);
	background: -o-linear-gradient(top, $start 0%,$stop 100%);
	background: -ms-linear-gradient(top, $start 0%,$stop 100%);
	background: linear-gradient(top, $start 0%,$stop 100%); }
	
@mixin linear-gradient-x($start: #eee, $stop: #fff) {
	background: $start;
	background: -moz-linear-gradient(left, $start 0%,$stop 100%);
	background: -webkit-gradient(linear, left top, right top, color-stop(0%,$start), color-stop(100%,$stop));
	background: -webkit-linear-gradient(left, $start 0%,$stop 100%);
	background: -o-linear-gradient(left, $start 0%,$stop 100%);
	background: -ms-linear-gradient(left, $start 0%,$stop 100%);
	background: linear-gradient(left, $start 0%,$stop 100%); }
	
@mixin box-shadow($x: 0, $y: 1px, $blur: 2px, $alpha: 0.1) {
	-moz-box-shadow: $x $y $blur rgba(0, 0, 0, $alpha);
	-webkit-box-shadow: $x $y $blur rgba(0, 0, 0, $alpha);
	box-shadow: $x $y $blur rgba(0, 0, 0, $alpha); }

@mixin box-shadow-inset($x: 0, $y: 1px, $blur: 2px, $alpha: 0.4) {
	-moz-box-shadow: inset $x $y $blur rgba(0, 0, 0, $alpha);
	-webkit-box-shadow: inset $x $y $blur rgba(0, 0, 0, $alpha);
	box-shadow: inset $x $y $blur rgba(0, 0, 0, $alpha); }

@mixin opacity($alpha: .5) {
	-moz-opacity: $alpha;
	-webkit-opacity: $alpha;
	opacity: $alpha; }